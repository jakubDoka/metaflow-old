Token { kind: Fun, value: "fun", line_data: LineData { line: 1, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "flo", line_data: LineData { line: 1, column: 4, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 1, column: 7, file_name: "test_code.pmh" } }
Token { kind: Pass, value: "pass", line_data: LineData { line: 1, column: 9, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 1, column: 14, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 2, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 3, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "foo", line_data: LineData { line: 3, column: 4, file_name: "test_code.pmh" } }
Token { kind: LPar, value: "(", line_data: LineData { line: 3, column: 7, file_name: "test_code.pmh" } }
Token { kind: RPar, value: ")", line_data: LineData { line: 3, column: 8, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 3, column: 9, file_name: "test_code.pmh" } }
Token { kind: Pass, value: "pass", line_data: LineData { line: 3, column: 11, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 3, column: 16, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 4, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 5, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "goo", line_data: LineData { line: 5, column: 4, file_name: "test_code.pmh" } }
Token { kind: LPar, value: "(", line_data: LineData { line: 5, column: 7, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "a", line_data: LineData { line: 5, column: 8, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 5, column: 9, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "i8", line_data: LineData { line: 5, column: 11, file_name: "test_code.pmh" } }
Token { kind: Comma, value: ",", line_data: LineData { line: 5, column: 13, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "b", line_data: LineData { line: 5, column: 15, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 5, column: 16, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "i8", line_data: LineData { line: 5, column: 18, file_name: "test_code.pmh" } }
Token { kind: RPar, value: ")", line_data: LineData { line: 5, column: 20, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 5, column: 21, file_name: "test_code.pmh" } }
Token { kind: Pass, value: "pass", line_data: LineData { line: 5, column: 23, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 5, column: 28, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 6, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 7, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "loo", line_data: LineData { line: 7, column: 4, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 7, column: 7, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 7, column: 9, file_name: "test_code.pmh" } }
Token { kind: Pass, value: "pass", line_data: LineData { line: 8, column: 2, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 8, column: 7, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 9, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 10, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "main", line_data: LineData { line: 10, column: 4, file_name: "test_code.pmh" } }
Token { kind: RArrow, value: "->", line_data: LineData { line: 10, column: 9, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "i64", line_data: LineData { line: 10, column: 12, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 10, column: 15, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 10, column: 17, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 11, column: 2, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 11, column: 9, file_name: "test_code.pmh" } }
Token { kind: Op, value: "+", line_data: LineData { line: 11, column: 12, file_name: "test_code.pmh" } }
Token { kind: Int(4, 64), value: "4", line_data: LineData { line: 11, column: 14, file_name: "test_code.pmh" } }
Token { kind: Op, value: "-", line_data: LineData { line: 11, column: 16, file_name: "test_code.pmh" } }
Token { kind: Int(2, 64), value: "2", line_data: LineData { line: 11, column: 18, file_name: "test_code.pmh" } }
Token { kind: Op, value: "*", line_data: LineData { line: 11, column: 20, file_name: "test_code.pmh" } }
Token { kind: Int(1, 64), value: "1", line_data: LineData { line: 11, column: 22, file_name: "test_code.pmh" } }
Token { kind: Op, value: "+", line_data: LineData { line: 11, column: 24, file_name: "test_code.pmh" } }
Token { kind: Int(8, 64), value: "8", line_data: LineData { line: 11, column: 26, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 11, column: 28, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 12, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 13, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "operator_stress_test", line_data: LineData { line: 13, column: 4, file_name: "test_code.pmh" } }
Token { kind: RArrow, value: "->", line_data: LineData { line: 13, column: 25, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "i64", line_data: LineData { line: 13, column: 28, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 13, column: 31, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 13, column: 33, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 14, column: 2, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 14, column: 9, file_name: "test_code.pmh" } }
Token { kind: Op, value: "+", line_data: LineData { line: 14, column: 12, file_name: "test_code.pmh" } }
Token { kind: Int(2, 64), value: "2", line_data: LineData { line: 14, column: 14, file_name: "test_code.pmh" } }
Token { kind: Op, value: "*", line_data: LineData { line: 14, column: 16, file_name: "test_code.pmh" } }
Token { kind: Int(1, 64), value: "1", line_data: LineData { line: 14, column: 18, file_name: "test_code.pmh" } }
Token { kind: Op, value: "-", line_data: LineData { line: 14, column: 20, file_name: "test_code.pmh" } }
Token { kind: Int(9, 64), value: "9", line_data: LineData { line: 14, column: 22, file_name: "test_code.pmh" } }
Token { kind: Op, value: "|", line_data: LineData { line: 14, column: 24, file_name: "test_code.pmh" } }
Token { kind: Int(4, 64), value: "4", line_data: LineData { line: 14, column: 26, file_name: "test_code.pmh" } }
Token { kind: Op, value: "&", line_data: LineData { line: 14, column: 28, file_name: "test_code.pmh" } }
Token { kind: Int(1, 64), value: "1", line_data: LineData { line: 14, column: 30, file_name: "test_code.pmh" } }
Token { kind: Op, value: "^", line_data: LineData { line: 14, column: 32, file_name: "test_code.pmh" } }
Token { kind: Int(2, 64), value: "2", line_data: LineData { line: 14, column: 34, file_name: "test_code.pmh" } }
Token { kind: Op, value: ">>", line_data: LineData { line: 14, column: 36, file_name: "test_code.pmh" } }
Token { kind: Int(1, 64), value: "1", line_data: LineData { line: 14, column: 39, file_name: "test_code.pmh" } }
Token { kind: Op, value: "<<", line_data: LineData { line: 14, column: 41, file_name: "test_code.pmh" } }
Token { kind: Int(7, 64), value: "7", line_data: LineData { line: 14, column: 44, file_name: "test_code.pmh" } }
Token { kind: Op, value: "min", line_data: LineData { line: 14, column: 46, file_name: "test_code.pmh" } }
Token { kind: Int(20, 64), value: "20", line_data: LineData { line: 14, column: 50, file_name: "test_code.pmh" } }
Token { kind: Op, value: "max", line_data: LineData { line: 14, column: 53, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 14, column: 57, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 14, column: 60, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 15, column: 1, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 16, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "conditional", line_data: LineData { line: 16, column: 4, file_name: "test_code.pmh" } }
Token { kind: RArrow, value: "->", line_data: LineData { line: 16, column: 16, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "i64", line_data: LineData { line: 16, column: 19, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 16, column: 22, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 16, column: 24, file_name: "test_code.pmh" } }
Token { kind: If, value: "if", line_data: LineData { line: 17, column: 2, file_name: "test_code.pmh" } }
Token { kind: Bool(false), value: "false", line_data: LineData { line: 17, column: 5, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 17, column: 10, file_name: "test_code.pmh" } }
Token { kind: Indent(2), value: "\n    ", line_data: LineData { line: 17, column: 12, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 18, column: 4, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 18, column: 11, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 18, column: 14, file_name: "test_code.pmh" } }
Token { kind: Elif, value: "elif", line_data: LineData { line: 19, column: 2, file_name: "test_code.pmh" } }
Token { kind: Bool(true), value: "true", line_data: LineData { line: 19, column: 7, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 19, column: 11, file_name: "test_code.pmh" } }
Token { kind: Indent(2), value: "\n    ", line_data: LineData { line: 19, column: 13, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 20, column: 4, file_name: "test_code.pmh" } }
Token { kind: If, value: "if", line_data: LineData { line: 20, column: 11, file_name: "test_code.pmh" } }
Token { kind: Bool(true), value: "true", line_data: LineData { line: 20, column: 14, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 20, column: 18, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 20, column: 20, file_name: "test_code.pmh" } }
Token { kind: Else, value: "else", line_data: LineData { line: 20, column: 23, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 20, column: 27, file_name: "test_code.pmh" } }
Token { kind: Int(20, 64), value: "20", line_data: LineData { line: 20, column: 29, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 20, column: 32, file_name: "test_code.pmh" } }
Token { kind: Else, value: "else", line_data: LineData { line: 21, column: 2, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 21, column: 6, file_name: "test_code.pmh" } }
Token { kind: Indent(2), value: "\n    ", line_data: LineData { line: 21, column: 8, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 22, column: 4, file_name: "test_code.pmh" } }
Token { kind: Int(0, 64), value: "0", line_data: LineData { line: 22, column: 11, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n\r", line_data: LineData { line: 22, column: 13, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 23, column: 1, file_name: "test_code.pmh" } }
Token { kind: Attr, value: "attr", line_data: LineData { line: 24, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "inline", line_data: LineData { line: 24, column: 5, file_name: "test_code.pmh" } }
Token { kind: Indent(0), value: "\n", line_data: LineData { line: 24, column: 12, file_name: "test_code.pmh" } }
Token { kind: Fun, value: "fun", line_data: LineData { line: 25, column: 0, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "inline_fn", line_data: LineData { line: 25, column: 4, file_name: "test_code.pmh" } }
Token { kind: RArrow, value: "->", line_data: LineData { line: 25, column: 14, file_name: "test_code.pmh" } }
Token { kind: Ident, value: "u32", line_data: LineData { line: 25, column: 17, file_name: "test_code.pmh" } }
Token { kind: Colon, value: ":", line_data: LineData { line: 25, column: 20, file_name: "test_code.pmh" } }
Token { kind: Indent(1), value: "\n  ", line_data: LineData { line: 25, column: 22, file_name: "test_code.pmh" } }
Token { kind: Return, value: "return", line_data: LineData { line: 26, column: 2, file_name: "test_code.pmh" } }
Token { kind: Int(10, 64), value: "10", line_data: LineData { line: 26, column: 9, file_name: "test_code.pmh" } }
Group 'fun' "fun":
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "flo"
   None ':' ":"
  Group ':' ":"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "foo"
   None ':' ":"
  Group ':' ":"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "goo"
   FunctionArgument identifier "a":
    Identifier identifier "a"
    Identifier identifier "i8"
   FunctionArgument identifier "b":
    Identifier identifier "b"
    Identifier identifier "i8"
   None ':' ":"
  Group ':' ":"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "loo"
   None ':' ":"
  Group ':' ":"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "main"
   Identifier identifier "i64"
  Group ':' ":":
   ReturnStatement 'return' "return":
    BinaryOperation operator "-":
     Identifier operator "-"
     BinaryOperation operator "+":
      Identifier operator "+"
      Literal integer "10"
      Literal integer "4"
     BinaryOperation operator "+":
      Identifier operator "+"
      BinaryOperation operator "*":
       Identifier operator "*"
       Literal integer "2"
       Literal integer "1"
      Literal integer "8"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "operator_stress_test"
   Identifier identifier "i64"
  Group ':' ":":
   ReturnStatement 'return' "return":
    BinaryOperation operator "+":
     Identifier operator "+"
     Literal integer "10"
     BinaryOperation operator "|":
      Identifier operator "|"
      BinaryOperation operator "-":
       Identifier operator "-"
       BinaryOperation operator "*":
        Identifier operator "*"
        Literal integer "2"
        Literal integer "1"
       Literal integer "9"
      BinaryOperation operator "^":
       Identifier operator "^"
       BinaryOperation operator "&":
        Identifier operator "&"
        Literal integer "4"
        Literal integer "1"
       BinaryOperation operator "max":
        Identifier operator "max"
        BinaryOperation operator "min":
         Identifier operator "min"
         BinaryOperation operator "<<":
          Identifier operator "<<"
          BinaryOperation operator ">>":
           Identifier operator ">>"
           Literal integer "2"
           Literal integer "1"
          Literal integer "7"
         Literal integer "20"
        Literal integer "10"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "conditional"
   Identifier identifier "i64"
  Group ':' ":":
   IfExpression 'if' "if":
    Literal boolean "false"
    Group ':' ":":
     ReturnStatement 'return' "return":
      Literal integer "10"
    IfExpression 'elif' "elif":
     Literal boolean "true"
     Group ':' ":":
      ReturnStatement 'return' "return":
       IfExpression 'if' "if":
        Literal boolean "true"
        Group ':' ":":
         Literal integer "10"
        Group ':' ":":
         Literal integer "20"
     Group ':' ":":
      ReturnStatement 'return' "return":
       Literal integer "0"
 Attribute 'attr' "attr":
  AttributeElement identifier "inline"
 Function 'fun' "fun":
  FunctionHeader 'fun' "fun":
   Identifier identifier "inline_fn"
   Identifier identifier "u32"
  Group ':' ":":
   ReturnStatement 'return' "return":
    Literal integer "10"

