fun flo: pass

fun foo(): pass

fun goo(a: i8, b: i8): pass

fun loo:
  pass

fun main -> i64:
  return 10 + 4 - 2 * 1 + 8

fun operator_stress_test -> i64:
  return 10 + 2 * 1 - 9 | 4 & 1 ^ 2 >> 1 << 7 min 20 max 10

fun conditional -> i64:
  if false:
    return 10
  elif true:
    return if true: 10 else: 20
  else:
    return 0

attr inline = always, call_conv = cold
fun inline_fn -> u32:
  return 10

fun fib(v: i64) -> i64:
  return if v == 0 | v == 1:
    1
  else:
    fib(v - 1) + fib(v - 2)

fun fib_loop(v: i64) -> i64:
  var a, b, c = 1
  loop'a:
    c = a + b
    a = b
    b = c
    v = v - 1
    if v == 0:
      break'a
  return c

fun unary_operators(a: i64) -> i64:
  return -a + ~a + !a + ++a + --a

struct Foo:
  a, b, c: i64

struct Goo:
  embed foo: Foo
  attr something
  gva: i64

fun strings -> i64:
  var hello = "hello"
  return 0

